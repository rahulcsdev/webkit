// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                          String       @id @default(cuid())
  name                        String       @default("")
  email                       String       @unique @default("")
  code                        String       @default(" ")
  password                    String?
  designation                 String       @default("")
  File                        File[]       @relation("User_File")
  role                        Json         @default("[]")
  dateOfJoining               DateTime?
  reportingManager            User?        @relation("User_reportingManager", fields: [reportingManagerId], references: [id])
  reportingManagerId          String?      @map("reportingManager")
  createdDate                 DateTime?    @default("2023-05-11T12:52:03.993Z")
  from_User_reportingManager  User[]       @relation("User_reportingManager")
  from_Project_member         Project[]    @relation("Project_member")
  from_Project_projectManager Project[]    @relation("Project_projectManager")
  from_TimeEntery_userName    TimeEntery[] @relation("TimeEntery_userName")
  from_TimeEntery_reviewedBy  TimeEntery[] @relation("TimeEntery_reviewedBy")

  @@index([reportingManagerId])
}

model Project {
  id                      String       @id @default(cuid())
  name                    String       @default("")
  member                  User[]       @relation("Project_member")
  createAt                DateTime?    @default("2023-05-11T12:52:03.994Z")
  projectManager          User?        @relation("Project_projectManager", fields: [projectManagerId], references: [id])
  projectManagerId        String?      @map("projectManager")
  code                    String       @default(" ")
  File                    File[]       @relation("Project_File")
  status                  String?      @default("New")
  projectType             String?
  projectDiscription      String       @default("")
  startDate               DateTime?    @default("2023-05-11T12:52:03.994Z")
  endDate                 DateTime?    @default("2023-05-11T12:52:03.994Z")
  from_Milestone_project  Milestone[]  @relation("Milestone_project")
  from_Task_project       Task[]       @relation("Task_project")
  from_TimeEntery_project TimeEntery[] @relation("TimeEntery_project")

  @@index([projectManagerId])
}

model Milestone {
  id                  String   @id @default(cuid())
  name                String   @default("")
  project             Project? @relation("Milestone_project", fields: [projectId], references: [id])
  projectId           String?  @map("project")
  code                String   @default(" ")
  File                File[]   @relation("Milestone_File")
  status              String?  @default("New")
  startDate           String   @default("")
  endDate             String   @default("")
  from_Task_milestone Task[]   @relation("Task_milestone")

  @@index([projectId])
}

model Task {
  id                   String       @id @default(cuid())
  name                 String       @default("")
  code                 String       @default(" ")
  File                 File[]       @relation("Task_File")
  discription          String       @default("")
  project              Project?     @relation("Task_project", fields: [projectId], references: [id])
  projectId            String?      @map("project")
  priority             String?      @default("No priority")
  status               String?      @default("Open")
  milestone            Milestone?   @relation("Task_milestone", fields: [milestoneId], references: [id])
  milestoneId          String?      @map("milestone")
  startDate            String       @default("")
  endDate              String       @default("")
  estimateTime         String       @default("")
  taskType             String?      @default("No priority")
  from_TimeEntery_task TimeEntery[] @relation("TimeEntery_task")

  @@index([projectId])
  @@index([milestoneId])
}

model TimeEntery {
  id             String   @id @default(cuid())
  project        Project? @relation("TimeEntery_project", fields: [projectId], references: [id])
  projectId      String?  @map("project")
  task           Task?    @relation("TimeEntery_task", fields: [taskId], references: [id])
  taskId         String?  @map("task")
  activities     String   @default("")
  code           String   @default(" ")
  File           File[]   @relation("TimeEntery_File")
  duration       String   @default("")
  projectType    String?
  projectManager String   @default("")
  userName       User?    @relation("TimeEntery_userName", fields: [userNameId], references: [id])
  userNameId     String?  @map("userName")
  reviewStatus   String?
  remarks        String   @default("")
  reviewedBy     User?    @relation("TimeEntery_reviewedBy", fields: [reviewedById], references: [id])
  reviewedById   String?  @map("reviewedBy")
  reviewedAt     String   @default("")
  date           String   @default("")

  @@index([projectId])
  @@index([taskId])
  @@index([userNameId])
  @@index([reviewedById])
}

model File {
  id                   String       @id @default(cuid())
  documents_filesize   Int?
  documents_filename   String?
  from_User_File       User[]       @relation("User_File")
  from_Project_File    Project[]    @relation("Project_File")
  from_Milestone_File  Milestone[]  @relation("Milestone_File")
  from_Task_File       Task[]       @relation("Task_File")
  from_TimeEntery_File TimeEntery[] @relation("TimeEntery_File")
}
